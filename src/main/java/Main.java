import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Scanner;

public class Main {

	public static void main(String[] args) throws SQLException {
/*
		 Escribe un programa que se conecte a una base de datos HSQLDB y use statements para:

			1. Crear (si no existe) una base de datos con tablas de Sports y Players

			2. Hacer un menú con las siguientes opciones:
				2.1. Preguntar al usuario para añadir un deporte nuevo
				2.2. Preguntar al usuario para añadir un jugador nuevo
				2.3. Mostrar el nombre de cada jugador y el deporte que juega usando una query
				2.4. Preguntar al usuario el COD de un deporte para borrarlo a éste y a los jugadores asociados
*/

		System.out.println("Conectamos a la BD");
		String urlJDBC = "jdbc:hsqldb:sample.db";
		Connection con = DriverManager.getConnection(urlJDBC);
		
        System.out.println("Crea tablas si no existían.");
        creaTablas(con);
        
        boolean salir = false;
        while(!salir) {
	        switch (menu()) {
	        case 0:
	        	salir = true;
	        	break;
	        case 1:
	        	//1) Agregar nuevo deporte
	            
	        	break;
	        case 2:
	        	//2) Agregar nuevo jugador
	            
	        	break;
	        case 3:
	        	//3) Info. de jugador por su ID
	            
	        	break;
	        case 4:
	        	//4) Borrar deporte y sus jugadores
	        	
	        	break;
	        	
	        }
        }
        
        
        
        System.out.println("Cerramos conexion a la BD.");
        con.close();
	}

	
	
	
	
	
	public static void creaTablas(Connection con) throws SQLException {
        // Crear tablas, si no existen
        try (Statement stmt = con.createStatement()) {
            stmt.executeUpdate("CREATE TABLE IF NOT EXISTS sports ("
                    + "id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, "
                    + "deporte VARCHAR(20)"
                    + ");");

            stmt.executeUpdate("CREATE TABLE IF NOT EXISTS players ("
                    + "id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, "
                    + "name VARCHAR(20),"
                    + "sportsId INT,"
                    + "FOREIGN KEY (sportsId) REFERENCES sports(id)"
                    + ");");
        }

	}
	
	
	public static int menu() {
        Scanner scanner = new Scanner(System.in);
        int retorno;

        do {
            System.out.println();
            System.out.println("1) Agregar nuevo deporte");
            System.out.println("2) Agregar nuevo jugador");
            System.out.println("3) Info. de jugador por su ID");
            System.out.println("4) Borrar deporte y sus jugadores");
            System.out.println();
            System.out.println("0) Salir");
            System.out.println();
            System.out.println("Elige una opción y pulsa Intro: ");
            System.out.println();

            retorno = scanner.nextInt();

            if (retorno < 0 || retorno > 4) {
                System.out.println("Opción inválida. Inténtalo de nuevo.");
            }
        } while (retorno < 0 || retorno > 4);

        scanner.close();
        return retorno;
    }
        
}
